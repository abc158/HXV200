###############################################################################
#
# IAR ANSI C/C++ Compiler V7.30.4.8167/W32 for ARM        23/Sep/2017  15:46:29
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  F:\海尔\新版+8k解码+预约\src\local_process\local_process.c
#    Command line =  
#        F:\海尔\新版+8k解码+预约\src\local_process\local_process.c -lcN
#        F:\海尔\新版+8k解码+预约\project\Debug\List\ --diag_error PE223 -o
#        F:\海尔\新版+8k解码+预约\project\Debug\Obj\ --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "D:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Normal.h" --preinclude
#        F:\海尔\新版+8k解码+预约\project\..\lib\syscall_api.h -I
#        F:\海尔\新版+8k解码+预约\project\..\includes\ -I
#        F:\海尔\新版+8k解码+预约\project\..\src\includes\ -I
#        F:\海尔\新版+8k解码+预约\project\..\lib\ -I
#        F:\海尔\新版+8k解码+预约\project\..\src\ -I
#        F:\海尔\新版+8k解码+预约\project\..\src\local_process\ -I
#        F:\海尔\新版+8k解码+预约\project\..\src\cfg\ -I
#        F:\海尔\新版+8k解码+预约\project\..\src\dock\ -I
#        F:\海尔\新版+8k解码+预约\project\..\src\guardrail\ -Ohz
#    List file    =  
#        F:\海尔\新版+8k解码+预约\project\Debug\List\local_process.lst
#    Object file  =  F:\海尔\新版+8k解码+预约\project\Debug\Obj\local_process.o
#
###############################################################################

F:\海尔\新版+8k解码+预约\src\local_process\local_process.c
      1          //------------------------------------------------------------------------------
      2          //  Copyright (C) 2014-2017, Amicro, Inc.
      3          //  All rights reserved.
      4          //------------------------------------------------------------------------------
      5          #include <ui-config.h>
      6          #include "ui-commands.h"
      7          #include "am_date_base.h"
      8          #include "time.h"
      9          #include  <am_config_macro.h>
     10          #include "am_key.h"
     11          #include "act.h"
     12          #include "local_key_check.h"
     13          #include "remote.h"
     14          #include "display.h"
     15          #include "ui-song-player.h"
     16          #include "syscall_api.h"
     17          #include "wireless/ARF2496K.H"
     18          #include "sensor/sensor.h"
     19          #include "motor/motor.h"
     20          #include "monitor/robot_batter.h"
     21          #include "ui-manager/exception.h"
     22          #include "am_device.h"
     23          #ifdef USE_WIFI_DEMO_1
     24          #include "wifi/wifi_demo1/simwifi.h"
     25          #include "wifi/wifi_demo1/simsweep.h"
     26          #elif defined(USE_WIFI_DEMO_2)
     27          #include "wifi/wifi_demo2/simwifi_demo2.h"
     28          #include "wifi/wifi_demo2/SimSweep_demo2.h"
     29          #endif
     30          
     31          #include "state_view/state_view.h"
     32          
     33          
     34          #define USE_WATCHDOG_MONITOR  //需要打开看门狗监控，则需要定义
     35          #define FEED_DOG_MAX_TIME     10000 //ms
     36          
     37          /* 唤醒源 */
     38          volatile U8 wakeupSource;
     39          /*系统空闲计时*/
     40          U16 idle_cnt;
     41          int wdg_fd =-1;
     42          
     43          extern void ir_rx_capture_4khz(void);
     44          extern void ui_rx_server( void);
     45          extern void ui_uart_cmd_rounte(void);
     46          extern void robot_current_init(void);
     47          extern void set_adjust_adc_value_to_system(void);
     48          extern void wifi_uart_cmd_rounte(void);
     49          /****************************************************************
     50          *Function   :  start_watchdog
     51          *Description:  启动看门狗 
     52          *Input      :  无
     53          *Output     :  无
     54          *Return     :  无
     55          *Others     :  
     56          ******************************************************************/
     57          void start_watchdog()
     58          {
     59          #ifdef USE_WATCHDOG_MONITOR
     60            u16 max_check_time = FEED_DOG_MAX_TIME;//ms, 10s
     61            wdg_fd = open(DEV_WDG,0);
     62            ioctl(wdg_fd,WDT_START,&max_check_time);  
     63          #endif
     64          }
     65          
     66          /****************************************************************
     67          *Function   :  stop_watchdog
     68          *Description:  停止看门狗 
     69          *Input      :  无
     70          *Output     :  无
     71          *Return     :  无
     72          *Others     :  
     73          ******************************************************************/
     74          void stop_watchdog(void)
     75          {
     76          #ifdef USE_WATCHDOG_MONITOR  
     77            ioctl(wdg_fd,WDT_STOP,0); 
     78          #endif
     79          }
     80          
     81          /****************************************************************
     82          *Function   :  feed_watchdog
     83          *Description:  喂狗 
     84          *Input      :  无
     85          *Output     :  无
     86          *Return     :  无
     87          *Others     :  
     88          ******************************************************************/
     89          void feed_watchdog(void)
     90          {
     91          #ifdef USE_WATCHDOG_MONITOR  
     92            ioctl(wdg_fd,WDT_FEED,0); 
     93          #endif
     94          }
     95          
     96          /****************************************************************
     97          *Function   :  local_app_init
     98          *Description:  app初始化  
     99          *Input      :  无
    100          *Output     :  无
    101          *Return     :  无
    102          *Others     :  
    103          ******************************************************************/
    104          void local_app_init(void)
    105          {
    106            /*init all app*/
    107            _key_init();
    108            _remote_init();
    109            _act_init();
    110            _display_init();
    111            set_display_power_up_flag(1);
    112            songplayer_init();
    113            robot_ir_detection_init();
    114            robot_motor_init();
    115            robot_battery_init();
    116            robot_current_init();
    117            robot_universl_wheel_init();//初始化，exit需要在睡眠时处理
    118            set_adjust_adc_value_to_system();
    119            //InitARF2496k();
    120            sys_timer_register(HZ_8K,(long)ir_rx_capture_4khz,1);//红外优先级最高
    121          
    122            #ifdef USE_WIFI_DEMO_1
    123            UART_Config_PinResetWifiCard();
    124            #else
    125            wifi_init();
    126            #endif
    127            songplayer_play_id(SONG_ID_POWER_UP, 1);  
    128            start_watchdog();
    129            
    130          }
    131          
    132          
    133          
    134          /****************************************************************
    135          *Function   :  main_app_task
    136          *Description:  UI的处理函数，每10ms执行一次  
    137          *Input      :  无
    138          *Output     :  无
    139          *Return     :  无
    140          *Others     :  
    141          ******************************************************************/
    142          void main_app_task(void *arg)
    143          {	  
    144            UI_STATE_E s;
    145            while(1)
    146            {  
    147              {
    148                key_routine();
    149                remote_routine();
    150                #ifdef USE_WIFI_DEMO_1
    151                WifiData_Period_Process();
    152                #else
    153                uart_server_routine();
    154                #endif
    155           
    156                #ifdef USE_UART_WIFI
    157                wifi_uart_cmd_rounte();
    158                #endif
    159                
    160              } 
    161          
    162              {      
    163                s = get_ui_state();
    164                view_main_task();
    165                //if(s != UI_ENTER_SLEEPING)
    166                {                    
    167                  act_routine(); 
    168                  display_routine(); 
    169                  songplayer_routine();
    170                } //else {
    171                  //songplayer_quit_playing();
    172                //}
    173                robot_battery_monitor_routine();
    174                sys_exception_monitor();
    175                if(s == UI_TEST)
    176                {
    177                  self_test_routine();
    178                }
    179                ui_handle_idle(); 
    180                #ifdef USE_WIFI_DEMO_2
    181                map_data_process();
    182                #endif
    183              }
    184              feed_watchdog();
    185              sleep(1);
    186            }
    187            
    188          }
    189          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   feed_watchdog
         0   -- Indirect call
       8   local_app_init
         8   -> UART_Config_PinResetWifiCard
         8   -> _act_init
         8   -> _display_init
         8   -> _key_init
         8   -> _remote_init
         8   -> robot_battery_init
         8   -> robot_current_init
         8   -> robot_ir_detection_init
         8   -> robot_motor_init
         8   -> robot_universl_wheel_init
         8   -> set_adjust_adc_value_to_system
         8   -> set_display_power_up_flag
         8   -> songplayer_init
         8   -> songplayer_play_id
         0   -> start_watchdog
         8   -> sys_timer_register
       8   main_app_task
         8   -> WifiData_Period_Process
         8   -> act_routine
         8   -> display_routine
         8   -> feed_watchdog
         8   -> get_ui_state
         8   -> key_routine
         8   -> remote_routine
         8   -> robot_battery_monitor_routine
         8   -> sleep
         8   -> songplayer_routine
         8   -> sys_exception_monitor
         8   -> ui_handle_idle
         8   -> view_main_task
         8   -> wifi_uart_cmd_rounte
      16   start_watchdog
        16   -- Indirect call
       0   stop_watchdog
         0   -- Indirect call


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_2
       4  ??DataTable3_3
       4  ??DataTable3_4
      18  feed_watchdog
       2  idle_cnt
      80  local_app_init
      72  main_app_task
      40  start_watchdog
      16  stop_watchdog
       1  wakeupSource
       4  wdg_fd

 
   3 bytes in section .bss
   4 bytes in section .data
 246 bytes in section .text
 
 246 bytes of CODE memory
   7 bytes of DATA memory

Errors: none
Warnings: none
